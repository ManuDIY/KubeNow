---
language: python # (Ansible)

sudo: required

services:
  - docker

branches:
  except:
    - /^experimental\/.*$/
    - /^exp\/.*$/
    - /^testing\/.*$/
    - /^test\/.*$/
    - /^doc\/.*$/
    - /^docs\/.*$/
    - /^documentation\/.*$/

env:
  global:
    - TERRAFORM_VERSION=0.10.7
    - YAMLLINT_VERSION=1.8.1
  matrix:
    - HOST_CLOUD=openstack

before_install:

  # Install code review tools
  # Install Terraform
  - >
      travis_retry curl
      "https://releases.hashicorp.com/terraform/${TERRAFORM_VERSION}/terraform_${TERRAFORM_VERSION}_linux_amd64.zip"
      > /tmp/terraform.zip
  - sudo unzip /tmp/terraform.zip -d /usr/bin
  - sudo chmod +x /usr/bin/terraform

install:

  # Build Docker image
  # Create a docker image tag out of branch-name where / is replaced by -
  - tag="${TRAVIS_BRANCH/\//-}"
  - echo "install"
 
before_script:

  # Copy kn bin
  - echo "before"


script:

  # First test commands outside the init-dir (before cluster is deployed)
  - cd /tmp
  - echo "Inside script"

 

after_script:
  - echo "After script"

jobs:
  include:
    # Docker push stage
    - stage: Push container
      before_install: true
      install: true
      before_script: true
      after_script: true
      script:
        # Build and push Docker image (needs to be build again in this stage)
        - docker login -u="$DOCKER_USERNAME" -p="$DOCKER_PASSWORD"
        - echo "TRAVIS_BRANCH=$TRAVIS_BRANCH"
        - echo "TRAVIS_TAG=$TRAVIS_TAG"
        - >
            if [[ -n "$TRAVIS_TAG" ]]; then
              docker build -t kubenow/provisioners:$TRAVIS_TAG \
                -t kubenow/provisioners:latest .
              docker push kubenow/provisioners:$TRAVIS_TAG
              docker push kubenow/provisioners:latest
            elif [[ "$TRAVIS_BRANCH" == "master" ||
                      "$TRAVIS_BRANCH" == *"stable"* ||
                      "$TRAVIS_BRANCH" == *"development"* ]]; then
              # Create a docker image tag out of branch-name where / is replaced by -
              tag="${TRAVIS_BRANCH/\//-}"
              docker build -t kubenow/provisioners:$tag .
              docker push kubenow/provisioners:$tag
            fi
        # If tag, create a versioned kn CLI
        - >
            if [ ! -z $TRAVIS_TAG ]; then
              sed -i -e "s/kubenow_version=\"master\"/kubenow_version=\"${TRAVIS_TAG}\"/g" bin/kn
            fi
      deploy:
        provider: releases
        file: bin/kn
        skip_cleanup: true
        api_key:
          secure: >
            kTW1R8oSIGm91Vc4p9fw921REV234A6hv9P1VN4Yf6WBp3/UW1hGKm2K9/QSkovpSTEW1W
            nx3Sj63rb3L91xr+0sFGwI71nLGGWvjiOFKMl0HeJjF4OX+G6V6xdFF/CDW94hof+Lhzjk
            flxri1iR66dt5X45FnH4frvybBvg0yCyqL2EidZc+0WEbiocEINsgRnGMHJjYNVty0ee9A
            GOZJbts1UBoh5CmHkfNwchblvjipl/HqZ/KFcPmLpc5urb37ppe9qUA3smyYWnwzqQua0u
            k3jj79MKjvXIUY5OliihWFbTeGDmdMsKYRFp4cVDXU+gKOYFFlmybzgnU7D15XhepCqvqd
            CDAbgmUakti8R1dXbM2AKeP59xJLjEQeaJBL3uGcND4nu9+uHwnoT6k+rWwpJxkxdYoMgf
            YGHsZn8voCL2JbsNujsDvR5G9k6Wt/z5dGsJzzrHrunkaTQ3vTTsa+R1xwwGuJVvNbnG9h
            iAXr4ERmUfY6cMawVIyp6WKpNs+d20jWyEzEfOpxVIchLGLlNqH1/fHZqTZGiL0TvALxe7
            R3iHvmMotMv8UUAM/qaHROzOmWke5xv3oBAa26iB4UFoiWltGy22o6MbqQpdn2JyocbZvH
            m3xyck3pd6R7kQSHeDaQ4PpNwbDDYnTvb5sgjVtneNwswZPUZ4ojc=
        on: # yamllint disable-line rule:truthy
          tags: true
notifications:
  email: true
  slack:
    on_success: change
    on_failure: always
    secure: >
      ed+rC8Oc4EdZfptHGX1Xr5sNc+wQTyjb4rjJT0P/U/NBStmik7dnUfAK9vk6XYVDrrPZxmAz6A
      cJmEaxY4kdG2HBLBPD0keRxKh2rN2ZbjCTWuGlAomMkmNDcyeVoQI95HcT0nYHzgoUCGn7lgZ7
      9vBUhBqbJXUWbvkz7J5qn8Kx7PXWvmjW4YLu9RhuIP7JtZLDLJt9dgyeHXDm1CW3tvPPplv9e8
      l1GOcF2DBqodwd8+U5BTCNXf1DdwdvlmzIaZemy3sAsvNEr5wEIuO0Zw2cayhV80nf9fWW58ne
      NBV2i8oeAuCL/M3EkEE/Z4aI/zxBVRyTaeK0s+XKehlC7IDJxnMirbNn2X4yyUeWY/81DX+Hhb
      pip46TGQpS0sST8rBd7JYj0LjGSXj585xOcP67s9HdncnkVRdIdTOFX63m2bSE5tddJuOPggHZ
      VKM8k+twXsWpW7sCr95wnwlD/ARuuG3OTtV0HfnHpqvKLdBgJ1fEsmKXn6eAaDvcCQ0K5LUBUs
      yaZ9HHU7LYv7S760XgrmUEMR1SBsb9grFzANkAyhzApWQJ7wQbGD1IFX1kJl2v1Ii4WRgdVNll
      YcMeflpHWPYI0U0IVXYPPLuV5DOEoKfWsJpX3HtZswYLdNzrZkSB9DQ/LxkSAZZcbkj9GLCv2E
      igZHjgC3Ey2wwGIYQ=
